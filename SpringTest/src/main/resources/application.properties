spring.application.name=SpringTest

# SpringBoot가 어플리케이션을 구동할 때 자동으로 로딩하는 파일
# key=value 형태로 작성
# ex) DB정보, Tomcat 서버 정보 등

# 내장된 Tomcat서버의 포트번호로 변경
server.port=8090

# ContextPath 수정 -> Tomcat이 프로젝ㅈ트를 찾아가는 이름
# localhost : 8081/Ex01_servlet/Ex01_request
server.servlet.context-path=/SpringTest

# thyemeleaf 참조 경로
# classpath : -> src/main/resources

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false
# templates 디렉토리에 파일이 있는지 없는
spring.thymeleaf.check-template-location=true

# DB연결설정
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=hrd
spring.datasource.password=1234

# JPA설정 (JDBC -> API로 변형) : SQL쿼리를 자동 생성(편리, 간편, 유지보수)
# ORM(Object-Relational Mapping) : 객체와 테이블을 매핑

# OracleDB 상세설정
Spring.jpa.spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

# DDL 설정
spring.jpa.hibernate.ddl-auto=update

# 실행되는 SQL문장 보여주기
spring.jpa.show-sql=true

# 실제 JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true

